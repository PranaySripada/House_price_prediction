{"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import cross_val_predict"],"metadata":{"id":"-KrKT4ESpzgy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = pd.read_csv(r'/content/Linear_Regression_House_Dataset.csv')\n","data.head(5)"],"metadata":{"id":"_gV5W_DKr_B5","executionInfo":{"status":"ok","timestamp":1690114737309,"user_tz":-330,"elapsed":389,"user":{"displayName":"","userId":""}},"outputId":"b10de1e2-ce22-4a6d-c8d5-78a8a988059f","colab":{"base_uri":"https://localhost:8080/","height":461}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  date      price  bedrooms  bathrooms  sqft_living  sqft_lot  \\\n","0  2014-05-02 00:00:00   313000.0       3.0       1.50         1340      7912   \n","1  2014-05-02 00:00:00  2384000.0       5.0       2.50         3650      9050   \n","2  2014-05-02 00:00:00   342000.0       3.0       2.00         1930     11947   \n","3  2014-05-02 00:00:00   420000.0       3.0       2.25         2000      8030   \n","4  2014-05-02 00:00:00   550000.0       4.0       2.50         1940     10500   \n","\n","   floors  waterfront  view  condition  sqft_above  sqft_basement  yr_built  \\\n","0     1.5           0     0          3        1340              0      1955   \n","1     2.0           0     4          5        3370            280      1921   \n","2     1.0           0     0          4        1930              0      1966   \n","3     1.0           0     0          4        1000           1000      1963   \n","4     1.0           0     0          4        1140            800      1976   \n","\n","   yr_renovated                    street       city  statezip country  \n","0          2005      18810 Densmore Ave N  Shoreline  WA 98133     USA  \n","1             0           709 W Blaine St    Seattle  WA 98119     USA  \n","2             0  26206-26214 143rd Ave SE       Kent  WA 98042     USA  \n","3             0           857 170th Pl NE   Bellevue  WA 98008     USA  \n","4          1992         9105 170th Ave NE    Redmond  WA 98052     USA  "],"text/html":["\n","\n","  <div id=\"df-59ffa3de-84e8-4aac-966c-b2bc61cc2303\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>sqft_living</th>\n","      <th>sqft_lot</th>\n","      <th>floors</th>\n","      <th>waterfront</th>\n","      <th>view</th>\n","      <th>condition</th>\n","      <th>sqft_above</th>\n","      <th>sqft_basement</th>\n","      <th>yr_built</th>\n","      <th>yr_renovated</th>\n","      <th>street</th>\n","      <th>city</th>\n","      <th>statezip</th>\n","      <th>country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2014-05-02 00:00:00</td>\n","      <td>313000.0</td>\n","      <td>3.0</td>\n","      <td>1.50</td>\n","      <td>1340</td>\n","      <td>7912</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1340</td>\n","      <td>0</td>\n","      <td>1955</td>\n","      <td>2005</td>\n","      <td>18810 Densmore Ave N</td>\n","      <td>Shoreline</td>\n","      <td>WA 98133</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2014-05-02 00:00:00</td>\n","      <td>2384000.0</td>\n","      <td>5.0</td>\n","      <td>2.50</td>\n","      <td>3650</td>\n","      <td>9050</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>3370</td>\n","      <td>280</td>\n","      <td>1921</td>\n","      <td>0</td>\n","      <td>709 W Blaine St</td>\n","      <td>Seattle</td>\n","      <td>WA 98119</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2014-05-02 00:00:00</td>\n","      <td>342000.0</td>\n","      <td>3.0</td>\n","      <td>2.00</td>\n","      <td>1930</td>\n","      <td>11947</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1930</td>\n","      <td>0</td>\n","      <td>1966</td>\n","      <td>0</td>\n","      <td>26206-26214 143rd Ave SE</td>\n","      <td>Kent</td>\n","      <td>WA 98042</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2014-05-02 00:00:00</td>\n","      <td>420000.0</td>\n","      <td>3.0</td>\n","      <td>2.25</td>\n","      <td>2000</td>\n","      <td>8030</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1000</td>\n","      <td>1000</td>\n","      <td>1963</td>\n","      <td>0</td>\n","      <td>857 170th Pl NE</td>\n","      <td>Bellevue</td>\n","      <td>WA 98008</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2014-05-02 00:00:00</td>\n","      <td>550000.0</td>\n","      <td>4.0</td>\n","      <td>2.50</td>\n","      <td>1940</td>\n","      <td>10500</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1140</td>\n","      <td>800</td>\n","      <td>1976</td>\n","      <td>1992</td>\n","      <td>9105 170th Ave NE</td>\n","      <td>Redmond</td>\n","      <td>WA 98052</td>\n","      <td>USA</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59ffa3de-84e8-4aac-966c-b2bc61cc2303')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-bf9f7ce9-b667-454e-88be-a5783da7a499\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bf9f7ce9-b667-454e-88be-a5783da7a499')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-bf9f7ce9-b667-454e-88be-a5783da7a499 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-59ffa3de-84e8-4aac-966c-b2bc61cc2303 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-59ffa3de-84e8-4aac-966c-b2bc61cc2303');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["print(data.shape)"],"metadata":{"id":"rMVUHoLXsD9G","executionInfo":{"status":"ok","timestamp":1690114754060,"user_tz":-330,"elapsed":11,"user":{"displayName":"","userId":""}},"outputId":"072a85a5-1fdf-43aa-dcae-c0b3f919eda6","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(4600, 18)\n"]}]},{"cell_type":"code","source":["f = ['price', 'bedrooms', 'bathrooms', 'sqft_living', 'floors', 'condition', 'sqft_above', 'sqft_basement', 'yr_built',\n","     'yr_renovated']\n","\n","data = data[f]\n","print(data.shape)"],"metadata":{"id":"XgWfDHn_sIKp","executionInfo":{"status":"ok","timestamp":1690114764685,"user_tz":-330,"elapsed":5,"user":{"displayName":"","userId":""}},"outputId":"7ecf8bac-772d-4793-8bbd-635321ed5d12","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(4600, 10)\n"]}]},{"cell_type":"code","source":["data = data.dropna()\n","print(data.shape)"],"metadata":{"id":"AgCmA-dJsKpH","executionInfo":{"status":"ok","timestamp":1690114773208,"user_tz":-330,"elapsed":378,"user":{"displayName":"","userId":""}},"outputId":"be9e736f-b482-4a14-94ab-912516b857a1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(4600, 10)\n"]}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"id":"FDwM2Qp7sMuy","executionInfo":{"status":"ok","timestamp":1690114781933,"user_tz":-330,"elapsed":21,"user":{"displayName":"","userId":""}},"outputId":"3f8d4a1e-4919-47fc-8e2b-4ecdc74f8219","colab":{"base_uri":"https://localhost:8080/","height":344}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              price     bedrooms    bathrooms   sqft_living       floors  \\\n","count  4.600000e+03  4600.000000  4600.000000   4600.000000  4600.000000   \n","mean   5.519630e+05     3.400870     2.160815   2139.346957     1.512065   \n","std    5.638347e+05     0.908848     0.783781    963.206916     0.538288   \n","min    0.000000e+00     0.000000     0.000000    370.000000     1.000000   \n","25%    3.228750e+05     3.000000     1.750000   1460.000000     1.000000   \n","50%    4.609435e+05     3.000000     2.250000   1980.000000     1.500000   \n","75%    6.549625e+05     4.000000     2.500000   2620.000000     2.000000   \n","max    2.659000e+07     9.000000     8.000000  13540.000000     3.500000   \n","\n","         condition   sqft_above  sqft_basement     yr_built  yr_renovated  \n","count  4600.000000  4600.000000    4600.000000  4600.000000   4600.000000  \n","mean      3.451739  1827.265435     312.081522  1970.786304    808.608261  \n","std       0.677230   862.168977     464.137228    29.731848    979.414536  \n","min       1.000000   370.000000       0.000000  1900.000000      0.000000  \n","25%       3.000000  1190.000000       0.000000  1951.000000      0.000000  \n","50%       3.000000  1590.000000       0.000000  1976.000000      0.000000  \n","75%       4.000000  2300.000000     610.000000  1997.000000   1999.000000  \n","max       5.000000  9410.000000    4820.000000  2014.000000   2014.000000  "],"text/html":["\n","\n","  <div id=\"df-7885d4da-5f07-4189-9fd4-6d3945ceda41\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>sqft_living</th>\n","      <th>floors</th>\n","      <th>condition</th>\n","      <th>sqft_above</th>\n","      <th>sqft_basement</th>\n","      <th>yr_built</th>\n","      <th>yr_renovated</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.600000e+03</td>\n","      <td>4600.000000</td>\n","      <td>4600.000000</td>\n","      <td>4600.000000</td>\n","      <td>4600.000000</td>\n","      <td>4600.000000</td>\n","      <td>4600.000000</td>\n","      <td>4600.000000</td>\n","      <td>4600.000000</td>\n","      <td>4600.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.519630e+05</td>\n","      <td>3.400870</td>\n","      <td>2.160815</td>\n","      <td>2139.346957</td>\n","      <td>1.512065</td>\n","      <td>3.451739</td>\n","      <td>1827.265435</td>\n","      <td>312.081522</td>\n","      <td>1970.786304</td>\n","      <td>808.608261</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5.638347e+05</td>\n","      <td>0.908848</td>\n","      <td>0.783781</td>\n","      <td>963.206916</td>\n","      <td>0.538288</td>\n","      <td>0.677230</td>\n","      <td>862.168977</td>\n","      <td>464.137228</td>\n","      <td>29.731848</td>\n","      <td>979.414536</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>370.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>370.000000</td>\n","      <td>0.000000</td>\n","      <td>1900.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>3.228750e+05</td>\n","      <td>3.000000</td>\n","      <td>1.750000</td>\n","      <td>1460.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>1190.000000</td>\n","      <td>0.000000</td>\n","      <td>1951.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.609435e+05</td>\n","      <td>3.000000</td>\n","      <td>2.250000</td>\n","      <td>1980.000000</td>\n","      <td>1.500000</td>\n","      <td>3.000000</td>\n","      <td>1590.000000</td>\n","      <td>0.000000</td>\n","      <td>1976.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.549625e+05</td>\n","      <td>4.000000</td>\n","      <td>2.500000</td>\n","      <td>2620.000000</td>\n","      <td>2.000000</td>\n","      <td>4.000000</td>\n","      <td>2300.000000</td>\n","      <td>610.000000</td>\n","      <td>1997.000000</td>\n","      <td>1999.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2.659000e+07</td>\n","      <td>9.000000</td>\n","      <td>8.000000</td>\n","      <td>13540.000000</td>\n","      <td>3.500000</td>\n","      <td>5.000000</td>\n","      <td>9410.000000</td>\n","      <td>4820.000000</td>\n","      <td>2014.000000</td>\n","      <td>2014.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7885d4da-5f07-4189-9fd4-6d3945ceda41')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-53bd0002-616c-4460-ba4f-926d0e10c03a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-53bd0002-616c-4460-ba4f-926d0e10c03a')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-53bd0002-616c-4460-ba4f-926d0e10c03a button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7885d4da-5f07-4189-9fd4-6d3945ceda41 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7885d4da-5f07-4189-9fd4-6d3945ceda41');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["X = data[f[1:]]\n","y = data['price']"],"metadata":{"id":"eOJMm_TvsO3n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=42)\n","\n","print(X_train.shape)\n","print(X_test.shape)\n","print(y_train.shape)\n","print(y_test.shape)"],"metadata":{"id":"2P9g6p3dsRIY","executionInfo":{"status":"ok","timestamp":1690114800483,"user_tz":-330,"elapsed":376,"user":{"displayName":"","userId":""}},"outputId":"338f5625-27f2-4606-91e4-f2798f1fc4f4","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(3680, 9)\n","(920, 9)\n","(3680,)\n","(920,)\n"]}]},{"cell_type":"code","source":["lr = LinearRegression()\n","lr.fit(X_train,y_train)\n","print(lr.coef_)"],"metadata":{"id":"n2lTJrpZsTay","executionInfo":{"status":"ok","timestamp":1690114808843,"user_tz":-330,"elapsed":366,"user":{"displayName":"","userId":""}},"outputId":"8a19458c-0641-4918-c229-4cdbfe312fe9","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-7.34290433e+04  4.08765071e+04  2.00843741e+02  7.95669395e+04\n","  2.83940455e+04  9.14297117e+01  1.09414029e+02 -2.81179874e+03\n","  9.76260872e+00]\n"]}]},{"cell_type":"code","source":["y_test_predict = lr.predict(X_test)\n","print(y_test_predict.shape)"],"metadata":{"id":"BxHFc7ygsVf9","executionInfo":{"status":"ok","timestamp":1690114819813,"user_tz":-330,"elapsed":364,"user":{"displayName":"","userId":""}},"outputId":"f08e8248-b016-4728-ec88-ef49856e1d2f","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(920,)\n"]}]},{"cell_type":"code","source":["#ERROR PLOTTING\n","g=plt.plot((y_test - y_test_predict),marker='o',linestyle='')"],"metadata":{"id":"9g5PPp7rsYGt","executionInfo":{"status":"ok","timestamp":1690114830888,"user_tz":-330,"elapsed":905,"user":{"displayName":"","userId":""}},"outputId":"3c24e888-07d6-448c-9617-c6b9bf08e006","colab":{"base_uri":"https://localhost:8080/","height":445}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["lr = LinearRegression(fit_intercept=False)\n","lr.fit(X_train,y_train)\n","\n","y_test_predict = lr.predict(X_test)\n","\n","g=plt.plot((y_test - y_test_predict),marker='o',linestyle='')"],"metadata":{"id":"9aCcUsbgsarP","executionInfo":{"status":"ok","timestamp":1690114840761,"user_tz":-330,"elapsed":1663,"user":{"displayName":"","userId":""}},"outputId":"a3c6fd9a-fc7f-4da3-8e82-4cefd8386860","colab":{"base_uri":"https://localhost:8080/","height":445}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"B1O8RHNNsc4p"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1690115061300}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}